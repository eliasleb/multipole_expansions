import numpy as np

# \{(?<a1>\d+?), (?<a2>-?\d+?)\}  -->  \(${a1}, ${a2}\)
# \{(?<a1>\d+?),\s(?<a2>-?\d+?),\s(?<a3>-?\d+?)\}  -->  \(${a1}, ${a2}, ${a3}\)

SPHERICAL_TO_CARTESIAN = {(0, 0):
                              {(0, 0, 0): np.complex(0, -1) / np.sqrt(np.pi),
                               }, (1, -1):
                              {(1, 0, 0): (np.complex(0, 0.5) * np.sqrt(1.5)) / np.power(np.pi, 1.5),
                               (0, 1, 0): np.sqrt(1.5) / (2. * np.power(np.pi, 1.5)),
                               }, (1, 0):
                              {(0, 0, 1): (np.complex(0, 0.5) * np.sqrt(3)) / np.power(np.pi, 1.5),
                               }, (1, 1):
                              {(1, 0, 0): (np.complex(0, -0.5) * np.sqrt(1.5)) / np.power(np.pi, 1.5),
                               (0, 1, 0): np.sqrt(1.5) / (2. * np.power(np.pi, 1.5)),
                               }, (2, -2):
                              {(2, 0, 0): (np.complex(0, -0.125) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               (1, 1, 0): -0.25 * np.sqrt(7.5) / np.power(np.pi, 2.5),
                               (0, 2, 0): (np.complex(0, 0.125) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               }, (2, -1):
                              {(1, 0, 1): (np.complex(0, -0.25) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               (0, 1, 1): -0.25 * np.sqrt(7.5) / np.power(np.pi, 2.5),
                               }, (2, 0):
                              {(2, 0, 0): (np.complex(0, 0.125) * np.sqrt(5)) / np.power(np.pi, 2.5),
                               (0, 2, 0): (np.complex(0, 0.125) * np.sqrt(5)) / np.power(np.pi, 2.5),
                               (0, 0, 2): (np.complex(0, -0.25) * np.sqrt(5)) / np.power(np.pi, 2.5),
                               }, (2, 1):
                              {(1, 0, 1): (np.complex(0, 0.25) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               (0, 1, 1): -0.25 * np.sqrt(7.5) / np.power(np.pi, 2.5),
                               }, (2, 2):
                              {(2, 0, 0): (np.complex(0, -0.125) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               (1, 1, 0): np.sqrt(7.5) / (4. * np.power(np.pi, 2.5)),
                               (0, 2, 0): (np.complex(0, 0.125) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               }, (3, -3):
                              {(3, 0, 0): (np.complex(0, 0.03125) * np.sqrt(35)) / np.power(np.pi, 3.5),
                               (2, 1, 0): (3 * np.sqrt(35)) / (32. * np.power(np.pi, 3.5)),
                               (1, 2, 0): (np.complex(0, -0.09375) * np.sqrt(35)) / np.power(np.pi, 3.5),
                               (0, 3, 0): -0.03125 * np.sqrt(35) / np.power(np.pi, 3.5),
                               }, (3, -2):
                              {(2, 0, 1): (np.complex(0, 0.0625) * np.sqrt(52.5)) / np.power(np.pi, 3.5),
                               (1, 1, 1): np.sqrt(52.5) / (8. * np.power(np.pi, 3.5)),
                               (0, 2, 1): (np.complex(0, -0.0625) * np.sqrt(52.5)) / np.power(np.pi, 3.5),
                               }, (3, -1):
                              {(3, 0, 0): (np.complex(0, -0.03125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (2, 1, 0): -0.03125 * np.sqrt(21) / np.power(np.pi, 3.5),
                               (1, 2, 0): (np.complex(0, -0.03125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (1, 0, 2): (np.complex(0, 0.125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (0, 3, 0): -0.03125 * np.sqrt(21) / np.power(np.pi, 3.5),
                               (0, 1, 2): np.sqrt(21) / (8. * np.power(np.pi, 3.5)),
                               }, (3, 0):
                              {(2, 0, 1): (np.complex(0, -0.1875) * np.sqrt(7)) / np.power(np.pi, 3.5),
                               (0, 2, 1): (np.complex(0, -0.1875) * np.sqrt(7)) / np.power(np.pi, 3.5),
                               (0, 0, 3): (np.complex(0, 0.125) * np.sqrt(7)) / np.power(np.pi, 3.5),
                               }, (3, 1):
                              {(3, 0, 0): (np.complex(0, 0.03125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (2, 1, 0): -0.03125 * np.sqrt(21) / np.power(np.pi, 3.5),
                               (1, 2, 0): (np.complex(0, 0.03125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (1, 0, 2): (np.complex(0, -0.125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (0, 3, 0): -0.03125 * np.sqrt(21) / np.power(np.pi, 3.5),
                               (0, 1, 2): np.sqrt(21) / (8. * np.power(np.pi, 3.5)),
                               }, (3, 2):
                              {(2, 0, 1): (np.complex(0, 0.0625) * np.sqrt(52.5)) / np.power(np.pi, 3.5),
                               (1, 1, 1): -0.125 * np.sqrt(52.5) / np.power(np.pi, 3.5),
                               (0, 2, 1): (np.complex(0, -0.0625) * np.sqrt(52.5)) / np.power(np.pi, 3.5),
                               }, (3, 3):
                              {(3, 0, 0): (np.complex(0, -0.03125) * np.sqrt(35)) / np.power(np.pi, 3.5),
                               (2, 1, 0): (3 * np.sqrt(35)) / (32. * np.power(np.pi, 3.5)),
                               (1, 2, 0): (np.complex(0, 0.09375) * np.sqrt(35)) / np.power(np.pi, 3.5),
                               (0, 3, 0): -0.03125 * np.sqrt(35) / np.power(np.pi, 3.5),
                               }, (4, -4):
                              {(4, 0, 0): (np.complex(0, -0.0234375) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               (3, 1, 0): (-3 * np.sqrt(17.5)) / (32. * np.power(np.pi, 4.5)),
                               (2, 2, 0): (np.complex(0, 0.140625) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               (1, 3, 0): (3 * np.sqrt(17.5)) / (32. * np.power(np.pi, 4.5)),
                               (0, 4, 0): (np.complex(0, -0.0234375) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               }, (4, -3):
                              {(3, 0, 1): (np.complex(0, -0.046875) * np.sqrt(35)) / np.power(np.pi, 4.5),
                               (2, 1, 1): (-9 * np.sqrt(35)) / (64. * np.power(np.pi, 4.5)),
                               (1, 2, 1): (np.complex(0, 0.140625) * np.sqrt(35)) / np.power(np.pi, 4.5),
                               (0, 3, 1): (3 * np.sqrt(35)) / (64. * np.power(np.pi, 4.5)),
                               }, (4, -2):
                              {(4, 0, 0): (np.complex(0, 0.046875) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (3, 1, 0): (3 * np.sqrt(2.5)) / (32. * np.power(np.pi, 4.5)),
                               (2, 0, 2): (np.complex(0, -0.28125) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (1, 3, 0): (3 * np.sqrt(2.5)) / (32. * np.power(np.pi, 4.5)),
                               (1, 1, 2): (-9 * np.sqrt(2.5)) / (16. * np.power(np.pi, 4.5)),
                               (0, 4, 0): (np.complex(0, -0.046875) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (0, 2, 2): (np.complex(0, 0.28125) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               }, (4, -1):
                              {(3, 0, 1): (np.complex(0, 0.140625) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (2, 1, 1): (9 * np.sqrt(5)) / (64. * np.power(np.pi, 4.5)),
                               (1, 2, 1): (np.complex(0, 0.140625) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (1, 0, 3): (np.complex(0, -0.1875) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (0, 3, 1): (9 * np.sqrt(5)) / (64. * np.power(np.pi, 4.5)),
                               (0, 1, 3): (-3 * np.sqrt(5)) / (16. * np.power(np.pi, 4.5)),
                               }, (4, 0):
                              {(4, 0, 0): np.complex(0, -0.0703125) / np.power(np.pi, 4.5),
                               (2, 2, 0): np.complex(0, -0.140625) / np.power(np.pi, 4.5),
                               (2, 0, 2): np.complex(0, 0.5625) / np.power(np.pi, 4.5),
                               (0, 4, 0): np.complex(0, -0.0703125) / np.power(np.pi, 4.5),
                               (0, 2, 2): np.complex(0, 0.5625) / np.power(np.pi, 4.5),
                               (0, 0, 4): np.complex(0, -0.1875) / np.power(np.pi, 4.5),
                               }, (4, 1):
                              {(3, 0, 1): (np.complex(0, -0.140625) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (2, 1, 1): (9 * np.sqrt(5)) / (64. * np.power(np.pi, 4.5)),
                               (1, 2, 1): (np.complex(0, -0.140625) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (1, 0, 3): (np.complex(0, 0.1875) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (0, 3, 1): (9 * np.sqrt(5)) / (64. * np.power(np.pi, 4.5)),
                               (0, 1, 3): (-3 * np.sqrt(5)) / (16. * np.power(np.pi, 4.5)),
                               }, (4, 2):
                              {(4, 0, 0): (np.complex(0, 0.046875) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (3, 1, 0): (-3 * np.sqrt(2.5)) / (32. * np.power(np.pi, 4.5)),
                               (2, 0, 2): (np.complex(0, -0.28125) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (1, 3, 0): (-3 * np.sqrt(2.5)) / (32. * np.power(np.pi, 4.5)),
                               (1, 1, 2): (9 * np.sqrt(2.5)) / (16. * np.power(np.pi, 4.5)),
                               (0, 4, 0): (np.complex(0, -0.046875) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (0, 2, 2): (np.complex(0, 0.28125) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               }, (4, 3):
                              {(3, 0, 1): (np.complex(0, 0.046875) * np.sqrt(35)) / np.power(np.pi, 4.5),
                               (2, 1, 1): (-9 * np.sqrt(35)) / (64. * np.power(np.pi, 4.5)),
                               (1, 2, 1): (np.complex(0, -0.140625) * np.sqrt(35)) / np.power(np.pi, 4.5),
                               (0, 3, 1): (3 * np.sqrt(35)) / (64. * np.power(np.pi, 4.5)),
                               }, (4, 4):
                              {(4, 0, 0): (np.complex(0, -0.0234375) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               (3, 1, 0): (3 * np.sqrt(17.5)) / (32. * np.power(np.pi, 4.5)),
                               (2, 2, 0): (np.complex(0, 0.140625) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               (1, 3, 0): (-3 * np.sqrt(17.5)) / (32. * np.power(np.pi, 4.5)),
                               (0, 4, 0): (np.complex(0, -0.0234375) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               }, (5, -5):
                              {(5, 0, 0): (np.complex(0, 0.005859375) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (4, 1, 0): (15 * np.sqrt(77)) / (512. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (np.complex(0, -0.05859375) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (2, 3, 0): (-15 * np.sqrt(77)) / (256. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (np.complex(0, 0.029296875) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (0, 5, 0): (3 * np.sqrt(77)) / (512. * np.power(np.pi, 5.5)),
                               }, (5, -4):
                              {(4, 0, 1): (np.complex(0, 0.01171875) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               (3, 1, 1): (3 * np.sqrt(192.5)) / (64. * np.power(np.pi, 5.5)),
                               (2, 2, 1): (np.complex(0, -0.0703125) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               (1, 3, 1): (-3 * np.sqrt(192.5)) / (64. * np.power(np.pi, 5.5)),
                               (0, 4, 1): (np.complex(0, 0.01171875) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               }, (5, -3):
                              {(5, 0, 0): (np.complex(0, -0.001953125) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (4, 1, 0): (-3 * np.sqrt(385)) / (512. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (np.complex(0, 0.00390625) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (3, 0, 2): (np.complex(0, 0.015625) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (2, 3, 0): -0.00390625 * np.sqrt(385) / np.power(np.pi, 5.5),
                               (2, 1, 2): (3 * np.sqrt(385)) / (64. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (np.complex(0, 0.005859375) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (1, 2, 2): (np.complex(0, -0.046875) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (0, 5, 0): np.sqrt(385) / (512. * np.power(np.pi, 5.5)),
                               (0, 3, 2): -0.015625 * np.sqrt(385) / np.power(np.pi, 5.5),
                               }, (5, -2):
                              {(4, 0, 1): (np.complex(0, -0.0078125) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (3, 1, 1): -0.015625 * np.sqrt(577.5) / np.power(np.pi, 5.5),
                               (2, 0, 3): (np.complex(0, 0.015625) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (1, 3, 1): -0.015625 * np.sqrt(577.5) / np.power(np.pi, 5.5),
                               (1, 1, 3): np.sqrt(577.5) / (32. * np.power(np.pi, 5.5)),
                               (0, 4, 1): (np.complex(0, 0.0078125) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (0, 2, 3): (np.complex(0, -0.015625) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               }, (5, -1):
                              {(5, 0, 0): (np.complex(0, 0.00390625) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (4, 1, 0): np.sqrt(82.5) / (256. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (np.complex(0, 0.0078125) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (3, 0, 2): (np.complex(0, -0.046875) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (2, 3, 0): np.sqrt(82.5) / (128. * np.power(np.pi, 5.5)),
                               (2, 1, 2): (-3 * np.sqrt(82.5)) / (64. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (np.complex(0, 0.00390625) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (1, 2, 2): (np.complex(0, -0.046875) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (1, 0, 4): (np.complex(0, 0.03125) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (0, 5, 0): np.sqrt(82.5) / (256. * np.power(np.pi, 5.5)),
                               (0, 3, 2): (-3 * np.sqrt(82.5)) / (64. * np.power(np.pi, 5.5)),
                               (0, 1, 4): np.sqrt(82.5) / (32. * np.power(np.pi, 5.5)),
                               }, (5, 0):
                              {(4, 0, 1): (np.complex(0, 0.05859375) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (2, 2, 1): (np.complex(0, 0.1171875) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (2, 0, 3): (np.complex(0, -0.15625) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (0, 4, 1): (np.complex(0, 0.05859375) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (0, 2, 3): (np.complex(0, -0.15625) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (0, 0, 5): (np.complex(0, 0.03125) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               }, (5, 1):
                              {(5, 0, 0): (np.complex(0, -0.00390625) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (4, 1, 0): np.sqrt(82.5) / (256. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (np.complex(0, -0.0078125) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (3, 0, 2): (np.complex(0, 0.046875) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (2, 3, 0): np.sqrt(82.5) / (128. * np.power(np.pi, 5.5)),
                               (2, 1, 2): (-3 * np.sqrt(82.5)) / (64. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (np.complex(0, -0.00390625) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (1, 2, 2): (np.complex(0, 0.046875) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (1, 0, 4): (np.complex(0, -0.03125) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (0, 5, 0): np.sqrt(82.5) / (256. * np.power(np.pi, 5.5)),
                               (0, 3, 2): (-3 * np.sqrt(82.5)) / (64. * np.power(np.pi, 5.5)),
                               (0, 1, 4): np.sqrt(82.5) / (32. * np.power(np.pi, 5.5)),
                               }, (5, 2):
                              {(4, 0, 1): (np.complex(0, -0.0078125) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (3, 1, 1): np.sqrt(577.5) / (64. * np.power(np.pi, 5.5)),
                               (2, 0, 3): (np.complex(0, 0.015625) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (1, 3, 1): np.sqrt(577.5) / (64. * np.power(np.pi, 5.5)),
                               (1, 1, 3): -0.03125 * np.sqrt(577.5) / np.power(np.pi, 5.5),
                               (0, 4, 1): (np.complex(0, 0.0078125) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (0, 2, 3): (np.complex(0, -0.015625) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               }, (5, 3):
                              {(5, 0, 0): (np.complex(0, 0.001953125) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (4, 1, 0): (-3 * np.sqrt(385)) / (512. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (np.complex(0, -0.00390625) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (3, 0, 2): (np.complex(0, -0.015625) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (2, 3, 0): -0.00390625 * np.sqrt(385) / np.power(np.pi, 5.5),
                               (2, 1, 2): (3 * np.sqrt(385)) / (64. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (np.complex(0, -0.005859375) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (1, 2, 2): (np.complex(0, 0.046875) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (0, 5, 0): np.sqrt(385) / (512. * np.power(np.pi, 5.5)),
                               (0, 3, 2): -0.015625 * np.sqrt(385) / np.power(np.pi, 5.5),
                               }, (5, 4):
                              {(4, 0, 1): (np.complex(0, 0.01171875) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               (3, 1, 1): (-3 * np.sqrt(192.5)) / (64. * np.power(np.pi, 5.5)),
                               (2, 2, 1): (np.complex(0, -0.0703125) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               (1, 3, 1): (3 * np.sqrt(192.5)) / (64. * np.power(np.pi, 5.5)),
                               (0, 4, 1): (np.complex(0, 0.01171875) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               }, (5, 5):
                              {(5, 0, 0): (np.complex(0, -0.005859375) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (4, 1, 0): (15 * np.sqrt(77)) / (512. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (np.complex(0, 0.05859375) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (2, 3, 0): (-15 * np.sqrt(77)) / (256. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (np.complex(0, -0.029296875) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (0, 5, 0): (3 * np.sqrt(77)) / (512. * np.power(np.pi, 5.5)),
                               }, (6, -6):
                              {(6, 0, 0): (np.complex(0, -0.00048828125) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (5, 1, 0): (-3 * np.sqrt(3003)) / (1024. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (np.complex(0, 0.00732421875) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (3, 3, 0): (5 * np.sqrt(3003)) / (512. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (np.complex(0, -0.00732421875) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (1, 5, 0): (-3 * np.sqrt(3003)) / (1024. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (np.complex(0, 0.00048828125) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               }, (6, -5):
                              {(5, 0, 1): (np.complex(0, -0.0029296875) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (-15 * np.sqrt(1001)) / (1024. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (np.complex(0, 0.029296875) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (15 * np.sqrt(1001)) / (512. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (np.complex(0, -0.0146484375) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-3 * np.sqrt(1001)) / (1024. * np.power(np.pi, 6.5)),
                               }, (6, -4):
                              {(6, 0, 0): (np.complex(0, 0.0029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (5, 1, 0): (3 * np.sqrt(45.5)) / (256. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (np.complex(0, -0.0146484375) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (np.complex(0, -0.029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (3, 1, 2): (-15 * np.sqrt(45.5)) / (128. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (np.complex(0, -0.0146484375) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (2, 2, 2): (np.complex(0, 0.17578125) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (1, 5, 0): (-3 * np.sqrt(45.5)) / (256. * np.power(np.pi, 6.5)),
                               (1, 3, 2): (15 * np.sqrt(45.5)) / (128. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (np.complex(0, 0.0029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (np.complex(0, -0.029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               }, (6, -3):
                              {(5, 0, 1): (np.complex(0, 0.0029296875) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (9 * np.sqrt(1365)) / (1024. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (np.complex(0, -0.005859375) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (3, 0, 3): (np.complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (3 * np.sqrt(1365)) / (512. * np.power(np.pi, 6.5)),
                               (2, 1, 3): (-3 * np.sqrt(1365)) / (128. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (np.complex(0, -0.0087890625) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (1, 2, 3): (np.complex(0, 0.0234375) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-3 * np.sqrt(1365)) / (1024. * np.power(np.pi, 6.5)),
                               (0, 3, 3): np.sqrt(1365) / (128. * np.power(np.pi, 6.5)),
                               }, (6, -2):
                              {(6, 0, 0): (np.complex(0, -0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (5, 1, 0): -0.0009765625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (4, 2, 0): (np.complex(0, -0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (np.complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (3, 3, 0): -0.001953125 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (3, 1, 2): np.sqrt(1365) / (64. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (np.complex(0, 0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (2, 0, 4): (np.complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (1, 5, 0): -0.0009765625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (1, 3, 2): np.sqrt(1365) / (64. * np.power(np.pi, 6.5)),
                               (1, 1, 4): -0.015625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (0, 6, 0): (np.complex(0, 0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (np.complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 2, 4): (np.complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               }, (6, -1):
                              {(5, 0, 1): (np.complex(0, -0.009765625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (-5 * np.sqrt(136.5)) / (512. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (np.complex(0, -0.01953125) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (3, 0, 3): (np.complex(0, 0.0390625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (-5 * np.sqrt(136.5)) / (256. * np.power(np.pi, 6.5)),
                               (2, 1, 3): (5 * np.sqrt(136.5)) / (128. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (np.complex(0, -0.009765625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (1, 2, 3): (np.complex(0, 0.0390625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (1, 0, 5): (np.complex(0, -0.015625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-5 * np.sqrt(136.5)) / (512. * np.power(np.pi, 6.5)),
                               (0, 3, 3): (5 * np.sqrt(136.5)) / (128. * np.power(np.pi, 6.5)),
                               (0, 1, 5): -0.015625 * np.sqrt(136.5) / np.power(np.pi, 6.5),
                               }, (6, 0):
                              {(6, 0, 0): (np.complex(0, 0.0048828125) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (4, 2, 0): (np.complex(0, 0.0146484375) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (np.complex(0, -0.087890625) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (2, 4, 0): (np.complex(0, 0.0146484375) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (2, 2, 2): (np.complex(0, -0.17578125) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (2, 0, 4): (np.complex(0, 0.1171875) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (0, 6, 0): (np.complex(0, 0.0048828125) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (np.complex(0, -0.087890625) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (0, 2, 4): (np.complex(0, 0.1171875) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (0, 0, 6): (np.complex(0, -0.015625) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               }, (6, 1):
                              {(5, 0, 1): (np.complex(0, 0.009765625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (-5 * np.sqrt(136.5)) / (512. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (np.complex(0, 0.01953125) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (3, 0, 3): (np.complex(0, -0.0390625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (-5 * np.sqrt(136.5)) / (256. * np.power(np.pi, 6.5)),
                               (2, 1, 3): (5 * np.sqrt(136.5)) / (128. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (np.complex(0, 0.009765625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (1, 2, 3): (np.complex(0, -0.0390625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (1, 0, 5): (np.complex(0, 0.015625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-5 * np.sqrt(136.5)) / (512. * np.power(np.pi, 6.5)),
                               (0, 3, 3): (5 * np.sqrt(136.5)) / (128. * np.power(np.pi, 6.5)),
                               (0, 1, 5): -0.015625 * np.sqrt(136.5) / np.power(np.pi, 6.5),
                               }, (6, 2):
                              {(6, 0, 0): (np.complex(0, -0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (5, 1, 0): np.sqrt(1365) / (1024. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (np.complex(0, -0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (np.complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (3, 3, 0): np.sqrt(1365) / (512. * np.power(np.pi, 6.5)),
                               (3, 1, 2): -0.015625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (2, 4, 0): (np.complex(0, 0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (2, 0, 4): (np.complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (1, 5, 0): np.sqrt(1365) / (1024. * np.power(np.pi, 6.5)),
                               (1, 3, 2): -0.015625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (1, 1, 4): np.sqrt(1365) / (64. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (np.complex(0, 0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (np.complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 2, 4): (np.complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               }, (6, 3):
                              {(5, 0, 1): (np.complex(0, -0.0029296875) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (9 * np.sqrt(1365)) / (1024. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (np.complex(0, 0.005859375) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (3, 0, 3): (np.complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (3 * np.sqrt(1365)) / (512. * np.power(np.pi, 6.5)),
                               (2, 1, 3): (-3 * np.sqrt(1365)) / (128. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (np.complex(0, 0.0087890625) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (1, 2, 3): (np.complex(0, -0.0234375) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-3 * np.sqrt(1365)) / (1024. * np.power(np.pi, 6.5)),
                               (0, 3, 3): np.sqrt(1365) / (128. * np.power(np.pi, 6.5)),
                               }, (6, 4):
                              {(6, 0, 0): (np.complex(0, 0.0029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (5, 1, 0): (-3 * np.sqrt(45.5)) / (256. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (np.complex(0, -0.0146484375) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (np.complex(0, -0.029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (3, 1, 2): (15 * np.sqrt(45.5)) / (128. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (np.complex(0, -0.0146484375) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (2, 2, 2): (np.complex(0, 0.17578125) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (1, 5, 0): (3 * np.sqrt(45.5)) / (256. * np.power(np.pi, 6.5)),
                               (1, 3, 2): (-15 * np.sqrt(45.5)) / (128. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (np.complex(0, 0.0029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (np.complex(0, -0.029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               }, (6, 5):
                              {(5, 0, 1): (np.complex(0, 0.0029296875) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (-15 * np.sqrt(1001)) / (1024. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (np.complex(0, -0.029296875) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (15 * np.sqrt(1001)) / (512. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (np.complex(0, 0.0146484375) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-3 * np.sqrt(1001)) / (1024. * np.power(np.pi, 6.5)),
                               }, (6, 6):
                              {(6, 0, 0): (np.complex(0, -0.00048828125) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (5, 1, 0): (3 * np.sqrt(3003)) / (1024. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (np.complex(0, 0.00732421875) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (3, 3, 0): (-5 * np.sqrt(3003)) / (512. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (np.complex(0, -0.00732421875) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (1, 5, 0): (3 * np.sqrt(3003)) / (1024. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (np.complex(0, 0.00048828125) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               }}
